//consultingpage.js
import React, { useState } from 'react';
import axios from 'axios';
import './ConsultingPage.css';

const ConsultingPage = () => {
  const [name, setName] = useState('');
  const [email, setEmail] = useState('');
  const [message, setMessage] = useState('');

  const handleConsultationRequest = async (e) => {
    e.preventDefault();

    // Basic validation
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!name || !emailRegex.test(email) || !message) {
      alert('Please fill in all fields with valid data.');
      return;
    }

    try {
      // You would replace this URL with your backend endpoint
      await axios.post('/consultation-requests.json', { name, email, message });
      alert('Consultation request submitted successfully!');
      setName('');
      setEmail('');
      setMessage('');
    } catch (error) {
      console.error('Error submitting request:', error);
      alert('There was an error submitting your request. Please try again later.');
    }
  };

  return (
    <div className="consulting-page">
      <h2>Consultation Request</h2>
      <form onSubmit={handleConsultationRequest} className="consultation-form">
        <input
          type="text"
          placeholder="Your Name"
          value={name}
          onChange={(e) => setName(e.target.value)}
          required
        />
        <input
          type="email"
          placeholder="Your Email"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          required
        />
        <textarea
          placeholder="Your Message"
          value={message}
          onChange={(e) => setMessage(e.target.value)}
          required
        />
        <button type="submit">Submit Request</button>
      </form>
    </div>
  );
};

export default ConsultingPage;

//consultingPage.css
.consulting-page {
    max-width: 600px;
    margin: 0 auto;
    padding: 20px;
    border: 1px solid #ccc;
    border-radius: 10px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  }
  
  .consulting-page h2 {
    text-align: center;
    margin-bottom: 20px;
  }
  
  .consultation-form {
    display: flex;
    flex-direction: column;
  }
  
  .consultation-form input,
  .consultation-form textarea {
    margin-bottom: 15px;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    font-size: 16px;
  }
  
  .consultation-form button {
    padding: 10px;
    background-color: #4CAF50;
    color: white;
    border: none;
    border-radius: 5px;
    font-size: 16px;
    cursor: pointer;
  }
  
  .consultation-form button:hover {
    background-color: #45a049;
  }

//Department.js
import React from 'react';
import { Paper, Typography, Stack } from '@mui/material';
import './Departments.css';

const departments = [
  { id: 1, name: 'Neurology' },
  { id: 2, name: 'Cardiology' },
  { id: 3, name: 'Pediatrics' },
  { id: 4, name: 'Orthopedics' }
];

function Departments() {
  return (
    <div className="departments">
      <Typography variant="h4" gutterBottom>
        Our Departments
      </Typography>
      <Stack spacing={2}>
        {departments.map(department => (
          <Paper key={department.id} className="department-card" elevation={3}>
            <Typography variant="h6">{department.name}</Typography>
            <Typography variant="body2">
              {`Learn more about our ${department.name} services and specialists.`}
            </Typography>
          </Paper>
        ))}
      </Stack>
    </div>
  );
}

export default Departments;

//Department.css
.departments {
    padding: 20px;
    background-color: #f0f4f8;
  }
  
  .department-card {
    padding: 20px;
    background-color: #ffffff;
    transition: transform 0.2s;
  }
  
  .department-card:hover {
    transform: scale(1.05);
  }

//Login.js
// src/components/Login.jsx
import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { TextField, Button, Typography, Container, Stack, Paper } from '@mui/material'; // Import Material-UI components
import { AccountCircle } from '@mui/icons-material'; // Import Material-UI icon
import { Lock } from '@mui/icons-material'; // Import Lock icon
import './Login.css'; // Optional: Add custom styles here

function Login() {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [error, setError] = useState('');
  const navigate = useNavigate();

  const handleLogin = () => {
    if (username.trim() === '' || password.trim() === '') {
      setError('Please enter your username and password.');
      return;
    }

    const user = JSON.parse(localStorage.getItem('user'));

    if (user && user.username === username && user.password === password) {
      navigate('/mainpage'); // Redirect to mainpage
    } else {
      setError('Invalid username or password');
    }
  };

  return (
    <Container component="main" maxWidth="xs" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh', backgroundColor: '#e0f7fa' }}>
      <Paper elevation={10} style={{ padding: '40px', textAlign: 'center', width: '100%', borderRadius: '15px', backgroundColor: '#ffffff' }}>
        <Typography variant="h4" gutterBottom style={{ color: '#00796b' }}>
          Login
        </Typography>
        <br />
        <Stack spacing={3} alignItems="center">
          <TextField
            variant="outlined"
            label="Username"
            value={username}
            onChange={(e) => {
              setUsername(e.target.value);
              setError('');
            }}
            required
            InputProps={{
              startAdornment: <AccountCircle style={{ color: '#00796b' }} />, // Icon in the input field
            }}
            style={{ width: '80%', borderRadius: '10px' }}
          />
          <TextField
            variant="outlined"
            type="password"
            label="Password"
            value={password}
            onChange={(e) => {
              setPassword(e.target.value);
              setError('');
            }}
            required
            InputProps={{
              startAdornment: <Lock style={{ color: '#00796b' }} />, // Lock icon in the input field
            }}
            style={{ width: '80%', borderRadius: '10px' }}
          />
          {error && (
            <Typography color="error">{error}</Typography>
          )}
          <Button variant="contained" color="primary" onClick={handleLogin} style={{ width: '80%', borderRadius: '10px', backgroundColor: '#00796b' }}>
            Login
          </Button>
          <Typography variant="body2" style={{ color: '#00796b' }}>
            Don't have an account?{' '}
            <span onClick={() => navigate('/signup')} className="link" style={{ cursor: 'pointer', color: '#004d40', textDecoration: 'underline' }}>
              Sign Up
            </span>
          </Typography>
        </Stack>
      </Paper>
    </Container>
  );
}

export default Login;

//Login.css
body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background-color: #f8f9fa; /* Light gray background */
    margin: 0;
    padding: 0;
}

.form-container {
    max-width: 400px;
    margin: 100px auto; /* Center the form vertically */
    padding: 30px;
    background: #ffffff; /* White background */
    border-radius: 10px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1); /* Deeper shadow */
}

h2 {
    text-align: center;
    margin-bottom: 30px;
    color: #343a40; /* Darker text color */
}

input {
    width: 92%;
    padding: 12px;
    margin: 15px 0;
    border: 2px solid #007bff; /* Blue border */
    border-radius: 5px;
    transition: border-color 0.3s; /* Smooth transition */
}

input:focus {
    border-color: #28a745; /* Green on focus */
    outline: none; /* Remove default outline */
}

button {
    width: 100%;
    padding: 12px;
    background-color: #007bff; /* Blue background */
    color: white;
    border: none;
    border-radius: 5px;
    font-size: 16px;
    cursor: pointer;
    transition: background-color 0.3s; /* Smooth transition */
}

button:hover {
    background-color: #0056b3; /* Darker blue on hover */
}

p {
    text-align: center;
    margin-top: 20px;
}

.link {
    color: #007bff;
    cursor: pointer;
    text-decoration: underline; /* Underline for links */
}

//MainPage.js
import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { IconButton, AppBar, Toolbar, Typography, Button, Menu, MenuItem, Paper, Stack, FormControl, InputLabel, Select } from '@mui/material';
import { ExitToApp, MoreVert } from '@mui/icons-material';
import './MainPage.css';

function MainPage() {
  const navigate = useNavigate();
  const [anchorEl, setAnchorEl] = useState(null);
  const [showFindDoctor, setShowFindDoctor] = useState(false);
  const [selectedDepartment, setSelectedDepartment] = useState('');
  const [selectedDoctor, setSelectedDoctor] = useState('');

  const handleSignOut = () => {
    localStorage.removeItem('user');
    navigate('/');
  };

  const handleMenuOpen = (event) => {
    setAnchorEl(event.currentTarget);
  };

  const handleMenuClose = () => {
    setAnchorEl(null);
  };

  const handleFindDoctorClick = () => {
    setShowFindDoctor(!showFindDoctor);
  };

  const departments = [
    { id: 1, name: 'Neurology' },
    { id: 2, name: 'Cardiology' },
    { id: 3, name: 'Pediatrics' },
    { id: 4, name: 'Orthopedics' }
  ];

  const doctors = {
    Neurology: ['Dr. Smith', 'Dr. Johnson', 'Dr. Lee'],
    Cardiology: ['Dr. Brown', 'Dr. Davis', 'Dr. Wilson'],
    Pediatrics: ['Dr. Taylor', 'Dr. Anderson', 'Dr. Thomas'],
    Orthopedics: ['Dr. Jackson', 'Dr. White', 'Dr. Harris']
  };

  const handleSubmit = (event) => {
    event.preventDefault(); // Prevent the default form submission
    if (!selectedDepartment || !selectedDoctor) {
      alert('Please select both a department and a doctor.');
      return;
    }
    // Handle the form submission logic here
    console.log(`Selected Department: ${selectedDepartment}`);
    console.log(`Selected Doctor: ${selectedDoctor}`);
    // You can also navigate to another page or make an API call here
    alert(`You have selected ${selectedDoctor} from ${selectedDepartment}.`);
  };

  return (
    <div className="main-page">
      <AppBar position="static" style={{ backgroundColor: '#00796b' }}>
        <Toolbar>
          <Typography variant="h6" noWrap component="div" sx={{ flexGrow: 1 }}>
            Acme Hospital
          </Typography>
          <IconButton sx={{ ml: 'auto' }} onClick={handleMenuOpen}>
            <MoreVert />
          </IconButton>

          <Menu
            anchorEl={anchorEl}
            open={Boolean(anchorEl)}
            onClose={handleMenuClose}
            anchorOrigin={{
              vertical: 'top', horizontal: 'right'
            }}
            transformOrigin={{ vertical: 'top', horizontal: 'right' }}
          >
            <MenuItem onClick={handleFindDoctorClick}>Find a Doctor</MenuItem>
            <MenuItem>Consulting (Link to Consulting page)</MenuItem>  {/* Replace with your Consulting page link */}
            <MenuItem>Departments</MenuItem>
            <MenuItem onClick={handleSignOut}>
              <ExitToApp /> Sign Out
            </MenuItem>
          </Menu>
        </Toolbar>
      </AppBar>

      <main>
        <Stack spacing={3} style={{ padding: '20px' }}>
          <Paper elevation={3} style={{ padding: '20px', backgroundColor: '#e0f7fa' }}>
            <Typography variant="h4" gutterBottom>
              Welcome to Acme Hospital
            </Typography>
            <Typography variant="body1">
              Providing exceptional healthcare for over 50 years.
            </Typography>
          </Paper>

          {showFindDoctor && (
            <Paper elevation={3} style={{ padding: '20px' }}>
              <Typography variant="h5" gutterBottom>
                Find a Doctor
              </Typography>
              <form onSubmit={handleSubmit}>
                <FormControl fullWidth>
                  <InputLabel id="department-label">Select Department</InputLabel>
                  <Select
                    labelId="department-label"
                    value={selectedDepartment }
                    onChange={(e) => {
                      setSelectedDepartment(e.target.value);
                      setSelectedDoctor('');
                    }}
                  >
                    <MenuItem value="">Select Department</MenuItem>
                    {departments.map(department => (
                      <MenuItem key={department.id} value={department.name}>{department.name}</MenuItem>
                    ))}
                  </Select>
                </FormControl>

                <FormControl fullWidth>
                  <InputLabel id="doctor-label">Select Doctor</InputLabel>
                  <Select
                    labelId="doctor-label"
                    value={selectedDoctor}
                    onChange={(e) => setSelectedDoctor(e.target.value)}
                    disabled={!selectedDepartment}
                  >
                    <MenuItem value="">Select Doctor</MenuItem>
                    {selectedDepartment && doctors[selectedDepartment]?.map((doctor, index) => (
                      <MenuItem key={index} value={doctor}>{doctor}</MenuItem>
                    ))}
                  </Select>
                </FormControl>

                <Button type="submit" variant="contained" color="primary">
                  Submit
                </Button>
              </form>
            </Paper>
          )}

          <Paper elevation={3} style={{ padding: '20px' }}>
            <Typography variant="h5" gutterBottom>
              About Our Hospital
            </Typography>
            <Typography variant="body1">
              Acme Hospital is a leading healthcare provider in the city, offering a wide range of medical services and treatments. Our team of highly skilled doctors and nurses work tirelessly to ensure the well-being of our patients.
            </Typography>
            <br />
            <Typography variant="body1">
              With state-of-the-art facilities and cutting-edge technology, we strive to deliver the best possible care to our community. Our commitment to excellence is evident in our patient satisfaction ratings and the trust placed in us by our peers.
            </Typography>
          </Paper>
        </Stack>
      </main>

      <footer style={{ backgroundColor: '#00796b', color: '#fff', padding: '10px' }}>
        <Typography variant="body2">
          &copy; 2024 Acme Hospital. All rights reserved.
        </Typography>
      </footer>
    </div>
  );
}

export default MainPage;

//MainPage.css
/* src/components/MainPage.css */
body {
  font-family: Verdana, Geneva, Tahoma, sans-serif;
  margin: 0;
  padding: 0;
}

.main-page {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}

header {
  background-color: royalblue;
  color: white;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px 20px;
  position: relative; /* Ensure the nav can be positioned absolutely */
}

.logo {
  font-size: 24px;
  font-weight: bold;
}

.menu-toggle {
  font-size: 24px; /* Adjust size as needed */
  color: white; /* Make the icon color white */
  cursor: pointer;
  /* align-items: ; */
  width: 3%;
  position:sticky; /* Position it absolutely within the header */
  /* right: 20px; Adjust right spacing */
  /* top: 10px; Adjust top spacing */
}

nav {
  position: absolute; /* Position the nav absolutely */
  top: 50px; /* Adjust based on your header height */
  right: 20px; /* Adjust right spacing */
  background-color: royalblue; /* Background color for dropdown */
  border: 1px solid #ccc; /* Optional: border for dropdown */
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2); /* Optional: shadow for dropdown */
  z-index: 1; /* Ensure the nav appears above other elements */
  display: none; /* Hide the nav by default */
}

nav.show {
  display: block; /* Show the nav when the menu-toggle is clicked */
}

nav ul {
  list-style-type: none;
  padding: 0;
  margin: 0;
}

nav li {
  padding: 10px; /* Space between items */
}

nav a {
  color: #fff;
  text-decoration: none;
}

nav a:hover {
  background-color: #4169e1; /* Hover effect */
}

main {
  flex-grow: 1;
}

.hero {
  background-color: palegoldenrod;
  padding: 40px;
  text-align: center;
}

.hero-content {
  max-width: 800px;
  margin: 0 auto;
}

.hero h1 {
  font-size: 36px;
  margin-bottom: 10px;
}

.about, .services {
  padding: 40px;
}

.about-content, .services-content {
  max-width: 800px;
  margin: 0 auto;
}

.about p, .services li {
  line-height: 1.5;
}

footer {
  background-color: palegoldenrod;
  padding: 10px;
  text-align: center;
}

button {
  background-color: #dc3545;
  border: none;
  color: #fff;
  padding: 10px 20px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 16px;
  margin: 4px 2px;
  cursor: pointer;
}

//Signup.js
// src/components/Signup.jsx
import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { TextField, Button, Typography, Container, Stack, Paper } from '@mui/material'; // Import Material-UI components
import { AccountCircle } from '@mui/icons-material'; // Import Material-UI icon
import { Lock } from '@mui/icons-material'; // Import Lock icon
import './Signup.css'; // Optional: Add custom styles here

function Signup() {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [confirmPassword, setConfirmPassword] = useState('');
  const [email, setEmail] = useState('');
  const [error, setError] = useState('');
  const navigate = useNavigate();

  const handleSignup = () => {
    if (username.trim() === '' || password.trim() === '' || confirmPassword.trim() === '' || email.trim() === '') {
      setError('Please fill in all fields.');
      return;
    }

    if (password !== confirmPassword) {
      setError('Passwords do not match.');
      return;
    }

    const existingUser = JSON.parse(localStorage.getItem('user'));

    if (existingUser && existingUser.username === username) {
      setError('User already exists. Please choose a different username.');
      return;
    }

    localStorage.setItem('user', JSON.stringify({ username, password, email }));

    alert(`User ${username} created successfully! Please log in.`);
    navigate('/');
  };

  return (
    <Container component="main" maxWidth="xs" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh', backgroundColor: '#e3f2fd' }}>
      <Paper elevation={10} style={{ padding: '40px', textAlign: 'center', width: '100%', backgroundColor: '#ffffff', borderRadius: '15px' }}>
        <Typography variant="h4" gutterBottom style={{ color: '#00796b' }}>
          Sign Up
        </Typography>
        <Stack spacing={3} alignItems="center">
          <TextField
            variant="outlined"
            label="Username"
            value={username}
            onChange={(e) => {
              setUsername(e.target.value);
              setError('');
            }}
            required
            InputProps={{
              startAdornment: <AccountCircle style={{ color: '#00796b' }} />, // Icon in the input field
            }}
            style={{ width: '80%', borderRadius: '10px' }}
          />
          <TextField
            variant="outlined"
            type="email"
            label="Email"
            value={email}
            onChange={(e) => {
              setEmail(e.target.value);
              setError('');
            }}
            required
            style={{ width: '80%', borderRadius: '10px' }}
          />
          <TextField
            variant="outlined"
            type="password"
            label="Password"
            value={password}
            onChange={(e) => {
              setPassword(e.target.value);
              setError('');
            }}
            required
            InputProps={{
              startAdornment: <Lock style={{ color: '#00796b' }} />, // Lock icon in the input field
            }}
            style={{ width: '80%', borderRadius: '10px' }}
          />
          <TextField
            variant="outlined"
            type="password"
            label="Confirm Password"
            value={confirmPassword}
            onChange={(e) => {
              setConfirmPassword(e.target.value);
              setError('');
            }}
            required
            style={{ width: '80%', borderRadius: '10px' }}
          />
          {error && (
            <Typography color="error">{error}</Typography>
          )}
          <Button variant="contained" color="primary" onClick={handleSignup} style={{ width: '80%', backgroundColor: '#00796b', borderRadius: '10px' }}>
            Sign Up
          </Button>
          <Typography variant="body2" style={{ color: '#00796b' }}>
            Already have an account?{' '}
            <span onClick={() => navigate('/')} className="link" style={{ cursor: 'pointer', color: '#004d40', textDecoration: 'underline' }}>
              Login
            </span>
          </Typography>
        </Stack>
      </Paper>
    </Container>
  );
}

export default Signup;

//signup.css
/* src/components/Signup.css */
body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background-color: #f8f9fa; /* Light gray background */
    margin: 0;
    padding: 0;
}

.form-container {
    max-width: 400px;
    margin: 50px auto; /* Center the form vertically */
    padding: 30px;
    background: #ffffff; /* White background */
    border-radius: 10px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1); /* Deeper shadow */
}

h2 {
    text-align: center;
    margin-bottom: 30px;
    color: #343a40; /* Darker text color */
}

input {
    width: 100%;
    padding: 12px;
    margin: 15px 0;
    border: 2px solid #007bff; /* Blue border */
    border-radius: 5px;
    transition: border-color 0.3s; /* Smooth transition */
}

input:focus {
    border-color: #28a745; /* Green on focus */
    outline: none; /* Remove default outline */
}

button {
    width: 100%;
    padding: 12px;
    background-color: #007bff; /* Blue background */
    color: white;
    border: none;
    border-radius: 5px;
    font-size: 16px;
    cursor: pointer;
    transition: background-color 0.3s; /* Smooth transition */
}

button:hover {
    background-color: #0056b3; /* Darker blue on hover */
}

p {
    text-align: center;
    margin-top: 20px;
}

.link {
    color: #007bff;
    cursor: pointer;
    text-decoration: underline; /* Underline for links */
}
//Theme.js
import { createTheme } from '@mui/material/styles';

const theme = createTheme({
  palette: {
    primary: {
      main: '#e91e63', // Pink color for primary buttons
    },
    secondary: {
      main: '#9c27b0', // Purple color for secondary elements
    },
    background: {
      default: '#f3e5f5', // Light purple background color
    },
  },
});

export default theme;

